exit
params
helper.oddness(1).should be('odd')
helper.oddness(1)
exit
expect(response.code).to eq("200")
response.code
exit
params[:director].present?
params[:director]
exit
response
expect(response).to redirect_to(movies_path )
expect(response).to redirect_to (movies_path )
expect ( response ).to redirect_to (movies_path )
expect ( response ).to redirect_to ( review_movie_path )
response.body
response.content
response.status
expect(response).to contain('Star Wars')
response
exit
response
get :directors, {:director => "Something"}
get :directors
c
get :index
get index
get :movies
exit
get :movies
get movies
get movies_path
exit
get movies_path
exit
get movies_path
get 'movies_path'
get '/index'
get '/movies'
get '/directors?director=George+Lucas'
exit
response
expect(get: '/').to route_to(controller: 'movies', action: 'index')
get '/'
exit
get 'movies'
get '/'
get 'movies'
get 'movies_path'
exit
get 'directors_path', {:director => 'Some Random Name'}
exit
get 'directors_path', {:director => 'Some Random Name'}
exit
params
exit
get '/directors' exit
get '/directors'
exit
get 'directors_path'
post 'directors_path'
Movie.with_director('some random')
exit
Movie.with_director('George Lucas').count
Movie.with_director('George Lucas')
exit
Movie.ratings
exit
Movie.all
Movie.all.count
exit
Movie.all
Movie
exit
movie_aladdin
exit
:movie_aladdin
movie_aladdin
FactoryGirl.create(:movie_aladdin)
exit
movie_aladdin
:movie_aladdin
exit
request.original_url
params
exit
Movie.find_by(title: movie_title)[column_name].should match('e')
Movie.find_by(title: movie_title)[column_name].should match('')
Movie.find_by(title: movie_title)[column_name].nil?
Movie.find_by(title: movie_title)[column_name]
Movie.find_by(title: movie_title)['director']
Movie.find_by(title: movie_title)['rating']
Movie.find_by(title: movie_title)['title']
Movie.find_by(title: movie_title)[column_name]
column_name
coulmn_name
movie_title
exit
@movies
@movie
params
exit
params[:format].nil?
if params[:format].nil?
if params[:format]
if params[:format] {p true}
params[:format]
params
exit
params
exit
@movies_director
exit
Movie.all
@movies_director
exit
@movies_director.each do |movie| p movie end
@movies_director.each do |movie|
@movies_director
@movies_director.each do {|movie| movie}
@movies_director
exit
@movies_director
exit
@movies
exit
@movies_director
exit
Movie.find_by(title: params[:format])
@movies_director
movies_director
exit
Movie.find_by(director: params[:format])
Movie.find_by(title: params[:format])
params[:format]
params[:id]
params[:id
params
exit
Movie.all
Movie
@movie
@movies
params
exit
Movie.find_by(title: movie_name)[field_name].should match(field_value)
Movie.find_by(title: movie_name)[field_name].should field_value
Movie.find_by(title: movie_name)[field_name]
Movie.find_by(title: movie_name).field_name
Movie.find_by(title: movie_name).director
Movie.find_by(title: movie_name)
visit movie_path(Movie.find_by(title: movie_name))
field_value
movie_name
field_name
exit
Movie.find_by(title: movie_title)
visit edit_movie_path(Movie.find_by(title: movie_title))
Movie.find_by(title: movie_title)
Movie.find_by(title: "Alien")
Movie.find({title: "Alien"})
Movie.find(3)
Movie.find(2)
Movie.find(1)
Movie.find(:conditions => "title: Alien")
Movie.all
Movie.find(:conditions => "title=Alien")
Movie.find(:conditions => "title=Aladdin")
Movie.find(:conditions => :title = movie_title)
Movie.find(title=>movie_title)
Movie.find(title :movie_title)
Movie.find(:title, movie_title)
Movie.find(movie_title)
Movie[:id => 1]
Movie[:id =. 1]
Movie[:id = 1]
Movie.title
Movie.all
Movie.find movie_title
Movie.find {title => movie_title}
Movie.find {:title => movie_title}
Movie.find :conditions => ["Movie.title=?",  movie_title]
Movie.find :conditions => ["child.title=?",  movie_title]
Movie.find :conditions => title = movie_title
Movie.find movie_title
movie_title
Movie.all
exit
Movie.find movie_title
Movie.all
Movie
visit edit_movie_path(movie_title)
movie_title
exit
SELECT "movies".* FROM "movies"
@movie
@movies
visit edit_movie_path("Aladdin")
visit edit_movie_path(movie_title)
movie_title
exit
visit movies_path('Aladdin')
visit movie_path('Aladdin')
visit movie_path('Alien')
p @movie
p @movies
exit
@movies.each do |movie| p  movie end
@movies.each do |movie|  movie end
@movies.each do {|movie|  movie}
@movies.each do {|movie| p movie}
p movie_title
p @movie
p @movies
exit
p @movies
p @movie
exit
p movie
